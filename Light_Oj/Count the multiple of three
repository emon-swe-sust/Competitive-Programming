#include<bits/stdc++.h>
using namespace std;
int prop[100005*4];
int a1[100005*4];
int a2[100005*4];
int a3[100005*4];
 
void init(int node,int b,int e)
{
    if(b > e)
        return;
    if(b == e)
    {
        a3[node] = 1;
        return;
    }
    int mid,left,right;
    mid = (b+e)/2;
    left = node*2;
    right = node*2+1;
    init(left,b,mid);
    init(right,mid+1,e);
    a3[node] = a3[left] + a3[right];
    return ;
}
 
void update(int node,int b,int e,int i,int j)
{
    if(b>e)
        return;
    if(i > e || b > j)
        return;
    if(b >= i && j >= e)
    {
        prop[node]++;
        int temp = a3[node];
        a3[node] = a2[node];
        a2[node] = a1[node];
        a1[node] = temp;
        return ;
    }
    int mid,left,right;
    mid = (b+e)/2;
    left = node*2;
    right = node*2+1;
    update(left,b,mid,i,j);
    update(right,mid+1,e,i,j);
    a1[node] = a1[left]+a1[right];
    a2[node] = a2[left]+a2[right];
    a3[node] = a3[left]+a3[right];
    if(prop[node] % 3 == 1)
    {
        int temp = a3[node];
        a3[node] = a2[node];
        a2[node] = a1[node];
        a1[node] = temp;
    }
    if(prop[node] % 3 == 2)
    {
        int temp = a3[node];
        a3[node] = a1[node];
        a1[node] = a2[node];
        a2[node] = temp;
    }
    return ;
}
 
int query(int node,int b,int e,int i,int j,int carry)
{
    if(b > e)
        return 0;
    if(i > e || b > j)
        return 0;
    if(b >= i && j >= e)
    {
        if(carry%3 == 0)
            return a3[node];
        if(carry%3 == 1)
            return a2[node];
        if(carry%3 == 2)
            return a1[node];
    }
    int mid,left,right;
    mid = (b+e)/2;
    left = node*2;
    right = node*2+1;
    int p1 = query(left,b,mid,i,j,carry+prop[node]);
    int p2 = query(right,mid+1,e,i,j,carry+prop[node]);
    return p1+p2;
}
 
int main()
{
    int test,x;
    scanf("%d",&test);
    for(x=1; x<=test; x++)
    {
        int n,q,i,j;
        memset(prop,0,sizeof(prop));
        memset(a1,0,sizeof(a1));
        memset(a2,0,sizeof(a2));
        memset(a3,0,sizeof(a3));
        scanf("%d %d",&n,&q);
        init(1,1,n);
        printf("Case %d:\n",x);
        while(q--)
        {
            getchar();
 
            int a,b,c;
            scanf("%d %d %d",&a,&b,&c);
            if(a == 0)
                update(1,1,n,b+1,c+1);
            else if(a == 1)
            {
                int d3;
                d3 = query(1,1,n,b+1,c+1,0);
                cout << d3 << endl;
            }
        }
    }
    return 0;
}
